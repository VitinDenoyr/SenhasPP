<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAlgAAAFSCAIAAAChdzZwAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        vAAADrwBlbxySQAACmRJREFUeF7t3aHNKEQUhFEaIKEHDApFCYiXUAGW4BE4GkDRApVQA4KKQI+Y8CMm
        5O5JjtwrJ5/czz7/4hMAPEsIAXiaEALwNCEE4GlCCMDThBCApwkhAE8TQgCeJoQAPE0IAXiaEALwNCEE
        4GlCCMDThBCApwkhAE/7WAj/+PMv4L/58affYlDFP4/jHPj3YlCdEMKIEMJMDKoTQhgRQpiJQXVCCCNC
        CDMxqE4IYUQIYSYG1QkhjAghzMSgOiGEESGEmRhUJ4QwIoQwE4PqhBBGhBBmYlCdEMKIEMJMDKoTQhgR
        QpiJQXVCCCNCCDMxqE4IYUQIYSYG1QkhjAghzMSgOiGEESGEmRhUJ4QwIoQwE4PqhBBGhBBmYlCdEMKI
        EMJMDKoTQhgRQpiJQXVCCCNCCDMxqE4IYUQIYSYG1QkhjAghzMSgOiGEESGEmRhUJ4QwIoQwE4PqhBBG
        hBBmYlCdEMKIEMJMDKoTQhgRQpiJQXVCCCNCCDMxqE4IYUQIYSYG1QkhjAghzMSgOiGEESGEmRhUJ4Qw
        IoQwE4PqhBBGhBBmYlCdEMKIEMJMDKoTQhgRQpiJQXVCCCNCCDMxqE4IYUQIYSYG1QkhjAghzMSgOiGE
        ESGEmRhUJ4QwIoQwE4PqhBBGhBBmYlCdEMKIEMJMDKoTQhgRQpiJQXVCCCNCCDMxqE4IYUQIYSYG1Qkh
        jAghzMSgOiGEESGEmRhUJ4QwIoQwE4PqhBBGhBBmYlCdEMKIEMJMDKoTQhgRQpiJQXVCCCNCCDMxqE4I
        YUQIYSYG1QkhjAghzMSgOiGEESGEmRhUJ4QwIoQwE4PqhBBGhBBmYlCdEMKIEMJMDKoTQhgRQpiJQXVC
        CCNCCDMxqE4IYUQIYSYG1QkhjAghzMSgOiGEESGEmRhUJ4QwIoQwE4PqhBBGhBBmYlCdEMKIEMJMDKoT
        QhgRQpiJQXVCCCNCCDMxqE4IYUQIYSYG1QkhjAghzMSgOiGEESGEmRhUJ4QwIoQwE4PqhBBGhBBmYlCd
        EMKIEMJMDKoTQhgRQpiJQXVCCCNCCDMxqE4IYUQIYSYG1QkhjAghzMSgOiGEESGEmRhUJ4QwIoQwE4Pq
        hBBGhBBmYlCdEMKIEMJMDKoTQhgRQpiJQXVCCCNCCDMxqE4IYUQIYSYG1QkhjAghzMSgOiGEESGEmRhU
        J4QwIoQwE4PqhBBGhBBmYlCdEMKIEMJMDKoTQhgRQpiJQXVCCCNCCDMxqE4IYUQIYSYG1QkhjAghzMSg
        OiGEESGEmRhUJ4QwIoQwE4PqhBBGhBBmYlCdEMKIEMJMDKoTQhgRQpiJQXVCCCNCCDMxqE4IYUQIYSYG
        1QkhjAghzMSgOiGEESGEmRhUJ4QwIoQwE4PqhBBGhBBmYlCdEMKIEMJMDKoTQhgRQpiJQXVCCCNCCDMx
        qE4IYUQIYSYG1QkhjAghzMSgOiGEESGEmRhUJ4QwIoQwE4PqhBBGhBBmYlCdEMKIEMJMDKoTQhgRQpiJ
        QXVCCCNCCDMxqE4IYUQIYSYG1QkhjAghzMSgOiGEESGEmRhUJ4QwIoQwE4PqhBBGhBBmYlCdEMKIEMJM
        DKoTQhgRQpiJQXVCCCNCCDMxqE4IYUQIYSYG1QkhjAghzMSgOiGEESGEmRhUJ4QwIoQwE4PqhBBGhBBm
        YlCdEMKIEMJMDKoTQhgRQpiJQXVCCCNCCDMxqE4IYUQIYSYG1QkhjAghzMSgOiGEESGEmRhUJ4QwIoQw
        E4PqhBBGhBBmYlCdEMKIEMJMDKoTQhgRQpiJQXVCCCNCCDMxqE4IYUQIYSYG1QkhjAghzMSgOiGEESGE
        mRhUJ4QwIoQwE4PqhBBGhBBmYlCdEMKIEMJMDKoTQhgRQpiJQXVCCCNCCDMxqE4IYUQIYSYG1QkhjAgh
        zMSgOiGEESGEmRhUJ4QwIoQwE4PqhBBGhBBmYlCdEMKIEMJMDKoTQhgRQpiJQXVCCCNCCDMxqE4IYUQI
        YSYG1QkhjAghzMSgOiGEESGEmRhUJ4QwIoQwE4PqhBBGhBBmYlCdEMKIEMJMDKoTQhgRQpiJQXVCCCNC
        CDMxqE4IYUQIYSYG1QkhjAghzMSgOiGEESGEmRhUJ4QwIoQwE4PqhBBGhBBmYlCdEMKIEMJMDKoTQhgR
        QpiJQXVCCCNCCDMxqE4IYUQIYSYG1QkhjAghzMSgOiGEESGEmRhUJ4QwIoQwE4PqhBBGhBBmYlCdEMKI
        EMJMDKoTQhgRQpiJQXVCCCNCCDMxqE4IYUQIYSYG1QkhjAghzMSgOiGEESGEmRhUJ4QwIoQwE4PqhBBG
        hBBmYlCdEMKIEMJMDKoTQhgRQpiJQXVCCCNCCDMxqE4IYUQIYSYG1QkhjAghzMSgOiGEESGEmRhUJ4Qw
        IoQwE4PqhBBGhBBmYlCdEMKIEMJMDKoTQhgRQpiJQXVCCCNCCDMxqE4IYUQIYSYG1QkhjAghzMSgOiGE
        ESGEmRhUJ4QwIoQwE4PqhBBGhBBmYlCdEMKIEMJMDKoTQhgRQpiJQXVCCCNCCDMxqE4IYUQIYSYG1Qkh
        jAghzMSgOiGEESGEmRhUJ4QwIoQwE4PqhBBGhBBmYlCdEMKIEMJMDKr7WAi//e5n4L/58qvvY1DF19/8
        EOfAvxeD6j4WQgA4RggBeJoQAvA0IQTgaUIIwNOEEICnCSEATxNCAJ4mhAA8TQgBeJoQAvA0IQTgaUII
        wNOEEICnfSyEv/z6OwD8z0W8uo+FMH4+BID/oYhXJ4QAXBPx6oQQgGsiXp0QAnBNxKsTQgCuiXh1QgjA
        NRGvTggBuCbi1QkhANdEvDohBOCaiFcnhABcE/HqhBCAayJenRACcE3EqxNCAK6JeHVCCMA1Ea9OCAG4
        JuLVCSEA10S8OiEE4JqIVyeEAFwT8eqEEIBrIl6dEAJwTcSrE0IArol4dUIIwDURr04IAbgm4tUJIQDX
        RLw6IQTgmohXJ4QAXBPx6oQQgGsiXp0QAnBNxKsTQgCuiXh1QgjANRGvTggBuCbi1QkhANdEvDohBOCa
        iFcnhABcE/HqhBCAayJenRACcE3EqxNCAK6JeHVCCMA1Ea9OCAG4JuLVCSEA10S8OiEE4JqIVyeEAFwT
        8eqEEIBrIl6dEAJwTcSrE0IArol4dUIIwDURr04IAbgm4tUJIQDXRLw6IQTgmohXJ4QAXBPx6oQQgGsi
        Xp0QAnBNxKsTQgCuiXh1QgjANRGvTggBuCbi1QkhANdEvDohBOCaiFcnhABcE/HqhBCAayJenRACcE3E
        qxNCAK6JeHVCCMA1Ea9OCAG4JuLVCSEA10S8OiEE4JqIVyeEAFwT8eqEEIBrIl6dEAJwTcSrE0IArol4
        dUIIwDURr04IAbgm4tUJIQDXRLw6IQTgmohXJ4QAXBPx6oQQgGsiXp0QAnBNxKsTQgCuiXh1QgjANRGv
        TggBuCbi1QkhANdEvDohBOCaiFcnhABcE/HqPhZCADhGCAF4mhAC8DQhBOBpQgjA04QQgKcJIQBPE0IA
        niaEADxNCAF4mhAC8DQhBOBpQgjA04QQgKcJIQAP++LT344cPPecfbrHAAAAAElFTkSuQmCC
</value>
  </data>
</root>